import{_ as a,c as t,o,ag as s}from"./chunks/framework.BPCCVu80.js";const _=JSON.parse('{"title":"連携ファイルフォーマット定義ドキュメント生成","description":"","frontmatter":{},"headers":[],"relativePath":"README.md","filePath":"README.md"}'),c={name:"README.md"};function l(d,e,r,i,p,n){return o(),t("div",null,e[0]||(e[0]=[s('<h1 id="連携ファイルフォーマット定義ドキュメント生成" tabindex="-1">連携ファイルフォーマット定義ドキュメント生成 <a class="header-anchor" href="#連携ファイルフォーマット定義ドキュメント生成" aria-label="Permalink to &quot;連携ファイルフォーマット定義ドキュメント生成&quot;">​</a></h1><p>連携ファイルフォーマットの定義ドキュメントをスキーマ定義yamlから生成します。</p><h2 id="Template" tabindex="-1">Template <a class="header-anchor" href="#Template" aria-label="Permalink to &quot;Template&quot;">​</a></h2><p><code>/assets/schema/interface_files/__doc_template.md</code>の<code>[placeholder]</code>に各連携ファイルの定義が挿入されます。</p><p>各連携ファイルのフォーマット定義は<code>/batch/src/schema/interface_files/*.yaml</code>を参照します。<code>__order.yaml</code>に記載された順番に出力され、当該ファイルに記載のない連携ファイルはアルファベット順に末尾に追加されます。</p><h2 id="ビルド" tabindex="-1">ビルド <a class="header-anchor" href="#ビルド" aria-label="Permalink to &quot;ビルド&quot;">​</a></h2><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>npm run build</span></span></code></pre></div><p><code>./.vitepress/dist</code>にhtmlが出力されます。</p><blockquote><p>TODO VitePressのdevモードでの出力結果逐次確認にはまだ対応していません。</p></blockquote>',9)]))}const m=a(c,[["render",l]]);export{_ as __pageData,m as default};
